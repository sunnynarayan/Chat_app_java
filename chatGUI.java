/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat2;

import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author sunny
 */
public class chatGUI extends javax.swing.JFrame {
      String uname;
      server start;
    /**
     * Creates new form NewJFrame
     */
    chatGUI(String username, int port) throws SQLException, IOException {
        initComponents();
        this.username.setEditable(false);
        this.username.setText(username);
        this.uname = username;
        onlineFriendAction();
        fillFriends(username);
        start = new server();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        onlineFriend = new javax.swing.JComboBox<>();
        friend = new javax.swing.JComboBox<>();
        chatButton = new javax.swing.JButton();
        addFriend = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username :");

        jLabel3.setText("Add to Friend List:");

        chatButton.setText("Chat");
        chatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatButtonActionPerformed(evt);
            }
        });

        addFriend.setText("Add Friend");
        addFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFriendActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Friend to chat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(onlineFriend, 0, 118, Short.MAX_VALUE)
                            .addComponent(friend, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addFriend, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(friend, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chatButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFriend, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(onlineFriend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onlineFriendAction() throws SQLException{
        Connection conn = getConn();
        String query = "SELECT uname FROM users WHERE isOnline=1;";
        PreparedStatement stmt=conn.prepareStatement(query);
        ResultSet rs=stmt.executeQuery(query);
        while (rs.next()){
            onlineFriend.addItem(rs.getString("uname"));
        }
        conn.close();
    }
    
    private void fillFriends(String username) throws SQLException{
        Connection conn = getConn();
        String query = "SELECT * FROM `friendlist` WHERE uname ='"+username+"';";
        PreparedStatement stmt=conn.prepareStatement(query);
        ResultSet rs=stmt.executeQuery(query);
        while (rs.next()){
            friend.addItem(rs.getString("fname"));
        }
        conn.close();
    }
    
    private void chatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatButtonActionPerformed
          try {
              // TODO add your handling code here:
              
              String fname = String.valueOf(friend.getSelectedItem());
              int myport = getPort(uname);
              int otherPort = getPort(fname);
                
              Thread x = new Thread(start);
              x.start();
              start.usernames.add(uname);
              clientClient me = new clientClient(uname);
              start.usernames.add(fname);
              clientClient you = new clientClient(fname);
              me.setVisible(true);
              you.setVisible(true);
              this.setVisible(false);
              this.dispose();
              
          } catch (SQLException ex) {
         
            Logger.getLogger(chatGUI.class.getName()).log(Level.SEVERE, null, ex);
          } 
        
    }//GEN-LAST:event_chatButtonActionPerformed

    private void addFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFriendActionPerformed
        // TODO add your handling code here:
        Connection conn = getConn();
        Statement statement = null;
          try {
            statement = conn.createStatement();
            String fname = String.valueOf(onlineFriend.getSelectedItem());
            boolean b=statement.execute("INSERT INTO friendlist (`uname`, `fname`) VALUES ('"+uname+"','"+fname+"');");
          } catch (SQLException ex) {
              Logger.getLogger(chatGUI.class.getName()).log(Level.SEVERE, null, ex);
          }
          try {
              conn.close();
              friend.removeAllItems();
              fillFriends(uname);
          } catch (SQLException ex) {
              Logger.getLogger(chatGUI.class.getName()).log(Level.SEVERE, null, ex);
          }
          
    }//GEN-LAST:event_addFriendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new chatGUI("",0).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(chatGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(chatGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFriend;
    public javax.swing.JButton chatButton;
    public javax.swing.JComboBox<String> friend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> onlineFriend;
    public javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
    public Connection getConn(){
        Connection conn=null;
        try{  
        conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/chat","root","");
        Class.forName("com.mysql.jdbc.Driver"); 
        }catch(Exception e){
            System.out.println(e); 
      
        }
        return conn;
    }
    
    public int getPort(String name) throws SQLException{
        int port=0;
        Connection conn = getConn();
        String query = "SELECT port FROM `users` WHERE uname ='"+name+"';";
        PreparedStatement stmt=conn.prepareStatement(query);
        ResultSet rs=stmt.executeQuery(query);
        if (rs.next()){
            port = rs.getInt("port");
        }else{
            System.out.println("port no. cannot be retreived");
        }
        return port;
    }

}
